name: Publish

on:
  workflow_dispatch:
    inputs:
        push-registry:
            description: 'Push to registry'
            type: boolean
            required: true
            default: true

  schedule:
    - cron: "0 0 * * *"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  Image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        Dockerfile: [
            "11/alpine/Dockerfile", "11/bookworm/Dockerfile", "11/bullseye/Dockerfile",
            "12/alpine/Dockerfile", "12/bookworm/Dockerfile", "12/bullseye/Dockerfile",
            "13/alpine/Dockerfile", "13/bookworm/Dockerfile", "13/bullseye/Dockerfile",
            "14/alpine/Dockerfile", "14/bookworm/Dockerfile", "14/bullseye/Dockerfile",
            "15/alpine/Dockerfile", "15/bookworm/Dockerfile", "15/bullseye/Dockerfile",
            "latest/Dockerfile"
        ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
    
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Discover postgres and os version
        run: |
            # Get OS
            cd ${{ github.workspace }} && cd $(dirname ${{ matrix.Dockerfile }})
            echo "OS=$(basename $(pwd))" >> $GITHUB_ENV

            # Get Postgres Version
            cd ..
            echo "POSTGRES_VERSION=$(basename $(pwd))" >> $GITHUB_ENV
        
      - name: Determine whether to push to registry
        run: |
            if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
                echo "PUSH_REGISTRY=${{ github.event.inputs.push-registry }}" >> $GITHUB_ENV
            else
                echo "PUSH_REGISTRY=true" >> $GITHUB_ENV
            fi

      - name: Set image tag
        run: |
            cd $(dirname ${{ matrix.Dockerfile }})
            if [ -f ".latest" ]; then
                echo "IMAGE_TAG=latest" >> $GITHUB_ENV
            else
                echo "IMAGE_TAG=${{ env.OS }}-${{ env.POSTGRES_VERSION }}" >> $GITHUB_ENV
            fi
        
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: true

      - name: Extract Metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          tags: ${{ env.IMAGE_TAG }}

      - name: Build & Publish Image
        uses: docker/build-push-action@v4
        with:
          file: ./${{ matrix.Dockerfile }}
          push: ${{ env.PUSH_REGISTRY }}
          context: .
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  Cleanup:
    runs-on: ubuntu-latest
    needs: [ Image ]
    permissions:
      contents: read
      packages: write
      
    steps:
    - name: Prune Untagged 
      uses: vlaurin/action-ghcr-prune@v0.5.0
      with:
        token: ${{ secrets.DELETE_TOKEN }}
        container: docker-dalamud
        prune-untagged: true